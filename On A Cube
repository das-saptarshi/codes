'''
On The Cube:
    This is a Codevita question.
    
    It is given that 10x10x10 cube is there on the ground. There are several sweet
    spots on the cube. An ant is moving from one sweet point to another.
    If the next sweet point in on the same surface then the ant will move in an arc of 
    60 degree angle. If it is on another surface then it will take the shortest path to it.
    
    The problem will provide coordinates (x,y,z) for N sweet points. We have to calculate the
    distance the ant will have to travel.
    
    Note : No point will be there will z = 0 (bottom of the cube) and any point on the edge
    (the line where two surfaces merge).
'''


from math import pi

def calculate_distance(point_1, point_2):
    '''
    Method to return the distance the ant has to travel from
    sweet point 1 to sweet point 2.
    '''
    
    # Identify the surface of the two points
    for i in range(3):
        if point_1[i] in [0,10]:
            surface_1 = i
        if point_2[i] in [0,10]:
            surface_2 = i
    
    if surface_1 == surface_2 and point_1[surface_1] == point_2[surface_2]:
        # executes if both the surface are same and
        # returns the length of the arc
        radius = 0
        for i in range(3):
            if i != surface_1:
                radius += (point_1[i] - point_2[i])**2
        radius = radius**(0.5)
        return round(2*pi*radius/6,2)
    
    elif surface_1 == surface_2:
        # executes when the two surfaces are opposite to each other
        # ex : x = 0 and x = 10
        index = (surface_1 + 1) % 2
        
        height = 10 + point_1[index] + point_2[index]
        height = min(height, 40 - height)
        base = abs(point_1[2] - point_2[2])
        area = round(((height)**2+(base)**2)**(0.5), 2)
        
        height = 10 + point_1[2] + point_2[2]
        base = abs(point_1[index] - point_2[index])
        area = min(area, round(((height)**2+(base)**2)**(0.5), 2))
        
        return area
        
        
    else:
        # executes when the two surfaces are adjacent to each other.
        height =  abs(point_1[surface_1] - point_2[surface_1]) + abs(point_1[surface_2] - point_2[surface_2])
        
        index = 3 - surface_1 - surface_2
        base = abs(point_1[index] - point_2[index])
        
        return round(((height)**2+(base)**2)**(0.5), 2)
        

'''
Input Format :
    Line 1 contains the number of sweet points on the surface of the cube.
    Line 2 contains 3*N numbers representing the coordinates for N points.

Output Format :
    One line describing the distance travelled by the ant rounded upto 2 decimal places.
'''
N = int(input())
coordinates = list(map(int, input().split()))
point_1 = coordinates[:3]
total_distance = 0
for i in range(1,N):
    point_2 = coordinates[i*3 : (i+1)*3]
    total_distance += (calculate_distance(point_1, point_2))
    point_1 = point_2.copy()

print(round(total_distance, 2))

    
