'''
Sudoku Solver.

Author : Saptarshi Das.
'''


'''
Utility method to print the final board.
'''
def printBoard(board):
    line = '-'*6
    line = line + '+' + line + '-+' + line

    for i in range(9):
        if i > 0 and i % 3 == 0:
            print(line)
        for j in range(9):
            if j > 0 and j % 3 == 0:
                print('|',end=' ')
            print(board[i][j],end=' ')
        print()

'''
Method to check whether the value can be put in the given location
or not.
'''
def isSafe(board, row, col, value):        
    for i in range(9):
        if board[row][i] == value or board[i][col] == value:
            return False
            
    row -= row % 3
    col -= col % 3
            
    for i in range(3):
        for j in range(3):
            if board[row+i][col+j] == value:
                return False
    return True



'''
Recursive Method to fill the board up.
'''
def solveSudoku(board):
        
    row = -1
    col = -1
    
    '''
    Finds the next vacant spot in the baord. If found then try to fill
    it with number else return True indicating the board is filled up.
    '''
    found = False
    for i in range(9):
        for j in range(9):
            if board[i][j] == '.':
                row = i
                col = j
                found = True
                break
        if found:
            break
        
    if not found:
        return True
        
    '''
    Trying all possible values in the spot.
    '''
    for i in range(1,10):
        if isSafe(board, row, col, str(i)):
            board[row][col] = str(i)
            if solveSudoku(board):
                return True
            board[row][col] = '.'
    
    return False


board = [
    ["5","3",".",".","7",".",".",".","."],
    ["6",".",".","1","9","5",".",".","."],
    [".","9","8",".",".",".",".","6","."],
    ["8",".",".",".","6",".",".",".","3"],
    ["4",".",".","8",".","3",".",".","1"],
    ["7",".",".",".","2",".",".",".","6"],
    [".","6",".",".",".",".","2","8","."],
    [".",".",".","4","1","9",".",".","5"],
    [".",".",".",".","8",".",".","7","9"]]


solveSudoku(board)
printBoard(board)
    
